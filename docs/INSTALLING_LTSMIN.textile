h1. Installing LTSmin on a Debian box.

This tutorial should enable you to install LTSmin on a debian (lenny/squeeze) box. The install is from git, since the snapshot tarballs on the "ltsmin website":http://fmt.cs.utwente.nl/tools/ltsmin/ are _missing_ the essential depedencies nipsvm and buddy.

If you need memtime:http://fmt.cs.utwente.nl/tools/scm/memtime.git, you can build the updated version from "fmt git":http://fmt.cs.utwente.nl/tools/scm/memtime.git

If you end up with errors like the following:
<pre>
	Making all in nips-vm
	make[1]: Entering directory `/home/ties/downloads/ltsmin/nips-vm'
	make[1]: *** No rule to make target `all'.  Stop.
	make[1]: Leaving directory `/home/ties/downloads/ltsmin/nips-vm'
	make: *** [all-recursive] Error 1
</pre>

You need to build from the git repository. **The snapshot tarballs are useless unless you want to manually compile nips-vm and buddy!**

h2. The git clone

Clone the git repository and get the submodules
<pre>
	git clone http://fmt.cs.utwente.nl/tools/scm/ltsmin.git
	cd ltsmin && git submodule update --init
</pre>

h2. Required packages:

The following debian packages are required; If you are running a mix of stable/squeeze, this _will_ break.

* build-essential
* autoconf (for updating the configure file)
* libtool (for configure)
* libpopt0 libpopt-dev
* zlib1g zlib1g-dev
* xmlto
* asciidoc (>= 8.4.4, get it from lenny-backports)
* flex

Note that you need _all_ these dependencies.

h2. Dependencies

LTSmin requires some dependencies to be useful. MCRL2 was suggested, and MCRL was trivial to install (and required for the MPI benchmarks).

If you want documentation, you need Asciidoc > = 8.4.4. The current debian package has version 8.2.7, so you will need to compile it yourself, or get it from lenny-backports.

h3. building the dependencies

Since both MCRL and MCRL2 are research projects, they are not available in debian packages. You need to build them yourself.

Get MCRL 2.18.5 from "their website":http://homepages.cwi.nl/~mcrl/mutool.html and download mcrl2-200901 (not a more recent version; Those are broken) from the "mcrl2 website":http://www.mcrl2.org/mcrl2/wiki/index.php/Home

h5. Building mcrl2

Mcrl2 is trivial to install.
<pre>
	tar -jxf mcrl2-200901-src.tar.bz2cd mcrl2/
	./configure --prefix=[mcrl2 prefix directory]
	make
	make install
	./build/bin/bjam --install --install-boost-headers
</pre>

h5. Building mcrl

Mcrl is similarly trivial to install. Remember to install the boost headers.
<pre>
	tar -zxf mcrl-2.18.5.tar.gz
	cd mcrl-2.18.5/
	./configure --prefix=[mcrl prefix]
	make install
</pre>

h5. Building a patched instance of Divine-cluster[1]


Download divine-cluster-0.8.3 from "the Divine website":"http://divine.fi.muni.cz/page.php?page=download". Download version 0.8.3. Unpack the archive, and apply the "ltsmin-divine":"http://fmt.cs.utwente.nl/gitweb/?p=ltsmin.git;a=blob_plain;f=contrib/divine-cluster-0.8.3-ltsmin.patch;h=7862d34b6a3ae7b8a3db5a2ced0c0e1741036dca;hb=HEAD" patch to it.

<pre>
	cd divine-cluster-0.8.3
  	patch  -p1 < ../divine-cluster-0.8.3-ltsmin.patch
  	patch  -p1 < ../divine-cluster-0.8.3-ltsmin.patch
  	./configure --prefix=[divine-cluster prefix directory]
	./make
	./make install
</pre>

h2. Configuring LTSmin

Now you can configure ltsmin. The following command will first autogenerate the configure script for LTSmin. The second line will configure LTSmin with the dependencies you just compiled. **Remember to plug in the path prefixes for mcrl and mcrl2.**

<pre>
	./ltsminreconf
	./configure --disable-dependency-tracking --prefix=/home/ties/bin/ltsmin --with-mcrl2=[mcrl2 prefix] --with-mcrl=[mcrl prefix]/mCRL --with-divine=[divine prefix]
	make
	make install
</pre>
	
Append /mCRL to the path of mCRL. If you compile LTSmin with divine-cluster *and* mCRL, /mCRL needs to be added to the end of mCRL's path for it to compile.

fn1. Instructions taken from the "LTSMin website":http://fmt.cs.utwente.nl/tools/ltsmin/ 